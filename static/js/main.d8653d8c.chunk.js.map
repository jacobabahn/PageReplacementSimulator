{"version":3,"sources":["components/Header.js","components/Calculations.js","components/Main.js","Body.js","App.js","reportWebVitals.js","index.js"],"names":["Header","theme","classes","makeStyles","nav","backgroundColor","marginBottom","text","margin","color","fontSize","fontWeight","useStyles","className","AppBar","Toolbar","Typography","Calculations","props","container","width","align","display","float","marginRight","Card","CardContent","total","Math","round","hits","capMiss","compMiss","cache","lru","rowCount","numHits","policy","Main","useState","pages","setPages","anchorEl","setAnchorEl","inputPage","setInputPage","inputCacheSize","setInputCacheSize","table","marginLeft","borderRadius","cellText","borderBottom","thead","input","btn","border","btnItem","card","plusBtn","transition","cursor","transform","cellCard","updatePolicy","pol","updateRows","Number","isInteger","newVal","prevVal","length","temp","concat","push","includes","lastCache","copy","slice","i","splice","value","shift","pop","unshift","Button","aria-controls","aria-haspopup","onClick","event","currentTarget","Menu","id","keepMounted","open","Boolean","onClose","MenuItem","btnInput","Input","onChange","updateMaxCacheSize","target","placeholder","label","onKeyDown","key","console","log","Table","TableHead","TableRow","classname","TableCell","map","page","index","Body","body","height","paper","minHeight","overflow","font","Paper","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.d8653d8c.chunk.js","sourcesContent":["import React from 'react'\r\nimport AppBar from '@material-ui/core/AppBar'\r\nimport Toolbar from '@material-ui/core/Toolbar'\r\nimport Typography from '@material-ui/core/Typography'\r\nimport { makeStyles } from '@material-ui/core/styles'\r\n\r\nconst Header = theme => {\r\n    const useStyles = makeStyles({\r\n        nav: {\r\n            backgroundColor: \"#202020\",\r\n            marginBottom: \"10px\"\r\n        },\r\n        text: {\r\n            margin: '0 auto',\r\n            color: '#D3D3D3',\r\n            fontSize: \"2em\",\r\n            fontWeight: \"100\"\r\n        }\r\n    })\r\n\r\n    const classes = useStyles()\r\n\r\n    return(\r\n        <div className=\"epicFont\">\r\n            <AppBar className={classes.nav}>\r\n                <Toolbar>\r\n                    <Typography className={classes.text}>\r\n                        Page Replacement Simulator\r\n                    </Typography>\r\n                </Toolbar>\r\n            </AppBar>\r\n            <Toolbar />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Header","import React from 'react'\r\nimport { makeStyles } from \"@material-ui/core/styles\"\r\nimport { Card, CardContent } from '@material-ui/core'\r\n\r\nconst Calculations = (props) => {\r\n\r\n    const useStyles = makeStyles({\r\n       container: {\r\n           color: \"#D3D3D3\",\r\n        //    borderStyle: \"solid\",\r\n           width: \"25vw\",\r\n           align: \"right\",\r\n           display: \"flex\",\r\n           float: \"right\",\r\n           backgroundColor: \"#202020\",\r\n           marginRight: \"40px\"\r\n       }\r\n    })\r\n\r\n    const classes = useStyles()\r\n\r\n    return (\r\n        <Card className={classes.container}>\r\n            <CardContent className=\"epicFont\">\r\n                <h2>Calculations</h2>\r\n                <h3>Hit Percentage = {props.total > 0 ? Math.round((props.hits / (props.total)) * 100) : 0}%</h3>\r\n                <h3>Capacity Miss Percentage = {props.total > 0 ? Math.round((props.capMiss / (props.total)) * 100) : 0}%</h3>\r\n                <h3>Compulsory Miss Percentage = {props.total > 0 ? Math.round((props.compMiss / (props.total)) * 100) : 0}%</h3>\r\n                <h3>Total Miss Percentage = {props.total > 0 ? Math.round((props.compMiss + props.capMiss) / (props.total) * 100) : 0}%</h3>\r\n                {/* <h5>{props.calculations.hits}</h5>\r\n                <h5>{props.calculations.capMiss}</h5>\r\n                <h5>{props.calculations.compMiss}</h5> */}\r\n            </CardContent>\r\n        </Card>\r\n    )\r\n}\r\n\r\nexport default Calculations","import React, { useState } from 'react'\r\nimport { makeStyles } from \"@material-ui/core/styles\"\r\nimport AddIcon from '@material-ui/icons/Add'\r\nimport { Input, TableCell, Table, TableRow, TableHead, Card, Button, Menu, MenuItem, InputLabel } from '@material-ui/core'\r\n\r\nimport Calculations from './Calculations'\r\n\r\nlet cache = []\r\nlet hits = []\r\nlet lru = []\r\nlet rowCount = 0\r\nlet numHits = 0\r\nlet capMiss = 0\r\nlet compMiss = 0\r\n// let maxCacheLen = 5\r\nlet cacheLen = 0\r\nlet policy = 'FIFO'\r\n\r\nconst Main = () => {\r\n    const [pages, setPages] = useState([])\r\n    \r\n    const [anchorEl, setAnchorEl] = useState(null)\r\n    const [inputPolicy, setInputPolicy] = useState()\r\n    const [inputPage, setInputPage] = useState()\r\n    const [inputCacheSize, setInputCacheSize] = useState()\r\n\r\n    const useStyles = makeStyles({\r\n        table: {\r\n            width: \"60vw\",\r\n            // borderStyle: \"solid\",\r\n            display: \"flex\",\r\n            float: \"left\",\r\n            marginLeft: \"30px\",\r\n            borderRadius: \"100px\",\r\n        },\r\n        cellText: {\r\n            color: \"#D3D3D3\",\r\n            fontSize: \"1.2em\",\r\n            borderBottom: \"solid #282828 1px\"\r\n        },\r\n        thead: {\r\n            color: \"#D3D3D3\",\r\n            fontSize: \"1.4em\",\r\n            borderBottom: \"Solid #282828 2px\"\r\n        },\r\n        input: {\r\n            margin: \"30px 5px 30px 30px\",\r\n            color: 'white'\r\n        },\r\n        btn: {\r\n            color: \"#D3D3D3\",\r\n            marginLeft: \"30px\",\r\n            marginRight: \"20px\",\r\n            border: \"solid #202020 1px\"\r\n        },\r\n        btnItem: {\r\n            color: \"#D3D3D3\",\r\n            backgroundColor: \"#282828\"\r\n        },\r\n        card: {\r\n            width: \"60vw\",\r\n            backgroundColor: \"#202020\",\r\n        },\r\n        plusBtn: {\r\n            color: \"D3D3D3\",\r\n            transition: \".2s\",\r\n            \"&:hover\": {\r\n                color: \"#3f51b5\",\r\n                cursor: \"pointer\",\r\n                transform: \"scale(1.5)\"\r\n            },\r\n        cellCard: {\r\n            backgroundColor: \"#303030\"\r\n        } \r\n        },\r\n    })\r\n\r\n    const handleClick = (event) => {\r\n        setAnchorEl(event.currentTarget);\r\n      };\r\n    \r\n      const handleClose = () => {\r\n        setAnchorEl(null);\r\n    };\r\n\r\n    const updatePolicy = (pol) => {\r\n        policy = pol\r\n        setAnchorEl(null)\r\n    }\r\n\r\n    const updateMaxCacheSize = (event) => {\r\n        setInputCacheSize(event)\r\n        // maxCacheLen = inputCacheSize\r\n    }\r\n\r\n    const updateRows = () => {\r\n        if (!Number.isInteger(Number(inputPage)) || !Number.isInteger(Number(inputCacheSize))) {\r\n            return\r\n        }\r\n\r\n        // console.log(Number.isInteger(Number(inputPage)))\r\n        let newVal = inputPage\r\n        let prevVal = cache[cache.length - 1]\r\n        let temp = []\r\n        \r\n        \r\n        if (rowCount < 1) {\r\n            // newVal = inputPage\r\n            temp = cache.concat([newVal])\r\n            cache.push(temp)\r\n            hits.push('Compulsory Miss')\r\n            lru.push(newVal)\r\n            compMiss++\r\n        }\r\n        \r\n        else {\r\n            if (prevVal.includes(newVal) || prevVal.includes(newVal + ', ')) {\r\n                hits.push('Hit')\r\n                numHits++\r\n                temp = prevVal\r\n                let lastCache = cache[cache.length - 1]\r\n\r\n                if (policy === 'LRU' && rowCount > 1) {\r\n                    let copy = lastCache.slice()\r\n                    \r\n                    for (let i = 0; i < lastCache.length; i++) {\r\n                        if (lastCache[i] === (newVal + ', ') || lastCache[i] === newVal) {\r\n                            copy[copy.length - 1] = copy[copy.length - 1] + ', '\r\n                            copy.splice(i, 1)\r\n                            copy.push(newVal)\r\n                            cache.push(copy)\r\n                            rowCount++\r\n                            setPages([\r\n                                ...pages,\r\n                                { value: inputPage }\r\n                            ])\r\n                            return\r\n                        }\r\n                    }\r\n                }\r\n                rowCount++\r\n                cache.push(prevVal)\r\n                setPages([\r\n                    ...pages,\r\n                    { value: inputPage }\r\n                ])\r\n                return\r\n            }\r\n\r\n            // FIFO cache replacement when the cache is full\r\n            if (cache[cache.length -  1].length >= inputCacheSize && policy === 'FIFO') {\r\n                hits.push(\"Capacity Miss\")\r\n                temp = prevVal.concat([newVal])\r\n                temp[temp.length - 2] = temp[temp.length - 2] + ', '\r\n                temp.shift()\r\n                cache.push(temp)\r\n                capMiss++\r\n            }\r\n            // LIFO cache replacement when the cache is full\r\n            else if (cache[cache.length - 1].length >= inputCacheSize && policy === 'LIFO') {\r\n                hits.push(\"Capacity Miss\")\r\n                let copy = prevVal.slice()\r\n                copy.shift()\r\n                temp = [newVal + ', '].concat(copy)\r\n                cache.push(temp)\r\n                capMiss++\r\n            }\r\n            // LRU cache replacement when the cache is full\r\n            else if (cache[cache.length - 1].length >= inputCacheSize && policy === 'LRU') {\r\n                hits.push(\"Capacity Miss\")\r\n                capMiss++\r\n\r\n                temp = prevVal.concat([newVal])\r\n                temp.shift()\r\n                temp[temp.length - 2] = temp[temp.length - 2] + ', '\r\n\r\n                lru.pop()\r\n                lru.unshift(newVal)\r\n                cache.push(temp)\r\n\r\n            }\r\n            else {\r\n                hits.push(\"Compulsory Miss\")\r\n                lru.unshift(newVal)\r\n                compMiss++\r\n                if (policy === 'LIFO') {\r\n                    temp = [newVal + ', '].concat(prevVal)\r\n                    cache.push(temp)\r\n                } else {\r\n\r\n                    temp = prevVal.concat([newVal])\r\n                    temp[temp.length - 2] = temp[temp.length - 2] + ', '\r\n                    cache.push(temp)\r\n                }\r\n            }\r\n        }\r\n        cacheLen++\r\n        rowCount++\r\n            \r\n        setPages([\r\n            ...pages,\r\n            { value: inputPage }\r\n        ])\r\n        \r\n    }\r\n\r\n    const classes = useStyles()\r\n\r\n    return(\r\n        <div className={classes.text}>\r\n            <div>\r\n                {/* <Input className={classes.input} value={inputPolicy} onChange={(event) => setInputPolicy(event.target.value)} placeholder=\"Policy\" label=\"Policy\" />\r\n                <AddIcon className={classes.plusBtn} onClick={() => updatePolicy()}/> */}\r\n                <Button className={classes.btn}aria-controls=\"simple-menu\" aria-haspopup=\"true\" onClick={handleClick}>\r\n                    {policy}\r\n                </Button>\r\n                <Menu\r\n                    id=\"simple-menu\"\r\n                    anchorEl={anchorEl}\r\n                    keepMounted\r\n                    open={Boolean(anchorEl)}\r\n                    onClose={handleClose}\r\n                >\r\n                    <MenuItem className={classes.btnInput} onClick={() => updatePolicy('FIFO')}>FIFO</MenuItem>\r\n                    <MenuItem className={classes.btnInput} onClick={() => updatePolicy('LIFO')}>LIFO</MenuItem>\r\n                    <MenuItem className={classes.btnInput} onClick={() => updatePolicy('LRU')}>LRU</MenuItem>\r\n                </Menu>\r\n\r\n                <Input className={classes.input} value={inputCacheSize} onChange={(event) => updateMaxCacheSize(event.target.value)} placeholder=\"Max Cache Size\" label=\"MaxCache\" />\r\n                {/* <input value={inputPage} onChange={(event) => setInputPage(event.target.value)} label=\"Page\" /> */}\r\n                {/* <AddIcon className={classes.plusBtn} onClick={() => updateMaxCacheSize()}/> */}\r\n\r\n                <Input className={classes.input} value={inputPage} onChange={(event) => setInputPage(event.target.value)} onKeyDown={(event) => event.key === 'Enter' ? updateRows() : console.log('Not Enter')} placeholder=\"Page Number\" label=\"Page\" />\r\n                <AddIcon className={classes.plusBtn} onClick={() => updateRows()}/>\r\n\r\n            </div>\r\n        \r\n            <Table className={classes.table}>\r\n            <Card className={classes.card}>\r\n                <TableHead className={classes.thead}>\r\n                    <TableRow classname=\"epicFont\">\r\n                        <TableCell width=\"50%\" className={classes.thead} align=\"left\">P#</TableCell>\r\n                        <TableCell width=\"50%\" className={classes.thead} align=\"left\">Hit/Miss</TableCell>\r\n                        <TableCell width=\"50%\" className={classes.thead} align=\"left\">Cache</TableCell>\r\n                    </TableRow>\r\n                </TableHead>\r\n\r\n                {pages.map((page, index)=> \r\n                    <TableRow classname=\"epicFont\">\r\n                        <TableCell className={classes.cellText} align=\"left\">{page.value}</TableCell>\r\n                        <TableCell className={classes.cellText} align=\"left\">{hits[index]}</TableCell>\r\n                        <TableCell className={classes.cellText} align=\"left\">{cache[index]}\r\n                        </TableCell>\r\n                    </TableRow>\r\n                )}\r\n            </Card>\r\n            </Table>\r\n        \r\n            <Calculations hits={numHits} capMiss={capMiss} compMiss={compMiss} total={rowCount} />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Main","import React from 'react'\r\nimport { makeStyles } from \"@material-ui/core/styles\"\r\nimport { Paper } from '@material-ui/core'\r\n\r\nimport Main from './components/Main'\r\n\r\n\r\nconst Body = () => {\r\n    const useStyles = makeStyles({\r\n        body: {\r\n            height: \"100%\"\r\n        },\r\n        paper: {\r\n            backgroundColor: \"#303030\",\r\n            margin: \"25px\",\r\n            minHeight: \"85vh\",\r\n            overflow: \"auto\",\r\n        },\r\n        text: {\r\n            font: \"40px\",\r\n        }\r\n    })\r\n\r\n    const classes = useStyles()\r\n\r\n    return(\r\n        <div className={classes.body}>\r\n            <Paper className={classes.paper}>\r\n                <Main />\r\n            </Paper>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Body","import './App.css';\r\nimport Header from \"./components/Header\"\r\nimport Body from \"./Body\"\r\n\r\nfunction App() {\r\n  return (\r\n    <div>\r\n      <Header />\r\n      <Body />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}